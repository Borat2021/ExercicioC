<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label4.Text" xml:space="preserve">
    <value>9. Qual a saída do código a seguir?
Conta mauricio = new Conta();
mauricio.numero = 1;
mauricio.titular = "Mauricio";
mauricio.saldo = 100.0;
Conta mauricio2 = new Conta();
mauricio2.numero = 1;
mauricio2.titular = "Mauricio";
mauricio2.saldo = 100.0;
if (mauricio == mauricio2)
{
MessageBox.Show("As contas são iguais");
}
else
{
MessageBox.Show("As contas são diferentes");
}
</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>10. Qual a saída do código a seguir:
Conta mauricio = new Conta();
mauricio.saldo = 2000.0;
Conta copia = mauricio;
copia.saldo = 3000.0;
MessageBox.show("mauricio = " + mauricio.saldo);
MessageBox.show("copia = " + copia.saldo);
</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>12. (Opcional) Vamos adicionar uma validação no método Saca da Conta . Modifique o método
Saca para que ele não realize o saque caso o saldo atual da conta seja menor do que o valor
recebido como argumento.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>13. (Opcional) Modifique o método Saca com validação para que ele devolva o valor true caso o
saque tenha sido realizado com sucesso e false caso contrário. Depois modifique o código do
botão de teste da conta para que ele utilize o valor devolvido pelo método Saca para mostrar uma
mensagem para o usuário. Caso o saque seja bem sucedido, queremos mostrar a mensagem "Saque
realizado com sucesso", se não, mostraremos "Saldo insuficiente"</value>
  </data>
</root>